(* Test syntax analyser *)

module L = Lexing

let check str =
  let lexbuf = L.from_string str in
  try
    let ast = Parser.program Lexer.token lexbuf in
    let tree = Absyntree.flat_nodes (Absyntree.tree_of_lprogram ast) in
    let box = Tree.box_of_tree tree in
    Format.printf "%s\n\n%!" (Box.string_of_box box);
  with
  | Parser.Error ->
     Format.printf "%a error: syntax\n%!" Location.pp_position lexbuf.L.lex_curr_p
  | Error.Error (loc, msg) ->
     Format.printf "%a error: %s%!" Location.pp_location loc msg

let%expect_test "function declaration and constant expression" =
  check "int f(int x) = 100";
  [%expect{|
             ╭───────╮
             │Program│
             ╰────┬──╯
               ╭──┴╮
               │Fun│
               ╰──┬╯
      ╭───────┬───┴───────╮
    ╭─┴─╮ ╭───┴───╮ ╭─────┴────╮
    │ f │ │Formals│ │IntExp 100│
    │int│ ╰───┬───╯ ╰──────────╯
    ╰───╯   ╭─┴─╮
            │ x │
            │int│
            ╰───╯ |}];

  check "int f(int x, int y, bool z) = 100";
  [%expect{|
                  ╭───────╮
                  │Program│
                  ╰───┬───╯
                    ╭─┴─╮
                    │Fun│
                    ╰─┬─╯
      ╭────────────┬──┴────────────╮
    ╭─┴─╮     ╭────┴──╮      ╭─────┴────╮
    │ f │     │Formals│      │IntExp 100│
    │int│     ╰────┬──╯      ╰──────────╯
    ╰───╯   ╭─────┬┴─────╮
          ╭─┴─╮ ╭─┴─╮ ╭──┴─╮
          │ x │ │ y │ │ z  │
          │int│ │int│ │bool│
          ╰───╯ ╰───╯ ╰────╯ |}];

  check "int f() = 100";
  [%expect{| :1.7 error: syntax |}];

  check "int f(int x) = 99 int g(int y) = 100 int h(bool a, bool b) = a < b";
  [%expect{|
                                                ╭───────╮
                                                │Program│
                                                ╰────┬──╯
                 ╭────────────────────────────┬──────┴───────────────────────────╮
               ╭─┴─╮                       ╭──┴╮                               ╭─┴─╮
               │Fun│                       │Fun│                               │Fun│
               ╰─┬─╯                       ╰──┬╯                               ╰─┬─╯
      ╭───────┬──┴───────╮        ╭───────┬───┴───────╮        ╭─────────┬───────┴─────────╮
    ╭─┴─╮ ╭───┴───╮ ╭────┴────╮ ╭─┴─╮ ╭───┴───╮ ╭─────┴────╮ ╭─┴─╮   ╭───┴───╮         ╭───┴───╮
    │ f │ │Formals│ │IntExp 99│ │ g │ │Formals│ │IntExp 100│ │ h │   │Formals│         │OpExp <│
    │int│ ╰───┬───╯ ╰─────────╯ │int│ ╰───┬───╯ ╰──────────╯ │int│   ╰───┬───╯         ╰───┬───╯
    ╰───╯   ╭─┴─╮               ╰───╯   ╭─┴─╮                ╰───╯    ╭──┴───╮        ╭────┴─────╮
            │ x │                       │ y │                      ╭──┴─╮ ╭──┴─╮ ╭────┴───╮ ╭────┴───╮
            │int│                       │int│                      │ a  │ │ b  │ │VarExp a│ │VarExp b│
            ╰───╯                       ╰───╯                      │bool│ │bool│ ╰────────╯ ╰────────╯
                                                                   ╰────╯ ╰────╯ |}];

  check "foo f(int x) = 100";
  [%expect{| :1.3 error: syntax |}]

let%expect_test "binary operators" =
  check "bool f(int x) = 2 + 3 + 4 < 5 + 6";
  [%expect{|
                                   ╭───────╮
                                   │Program│
                                   ╰───┬───╯
                                     ╭─┴─╮
                                     │Fun│
                                     ╰─┬─╯
       ╭───────┬───────────────────────┴────────╮
    ╭──┴─╮ ╭───┴───╮                       ╭────┴──╮
    │ f  │ │Formals│                       │OpExp <│
    │bool│ ╰───┬───╯                       ╰────┬──╯
    ╰────╯   ╭─┴─╮                   ╭──────────┴───────────────╮
             │ x │              ╭────┴──╮                   ╭───┴───╮
             │int│              │OpExp +│                   │OpExp +│
             ╰───╯              ╰────┬──╯                   ╰───┬───╯
                               ╭─────┴──────────╮          ╭────┴─────╮
                           ╭───┴───╮       ╭────┴───╮ ╭────┴───╮ ╭────┴───╮
                           │OpExp +│       │IntExp 4│ │IntExp 5│ │IntExp 6│
                           ╰───┬───╯       ╰────────╯ ╰────────╯ ╰────────╯
                          ╭────┴─────╮
                     ╭────┴───╮ ╭────┴───╮
                     │IntExp 2│ │IntExp 3│
                     ╰────────╯ ╰────────╯ |}];

  check "bool f(int x) = 2 < 3 < 4";
  [%expect{| :1.23 error: syntax |}];

  check "int g(int x, bool y) = 6 < 7 + 1";
  [%expect{|
                         ╭───────╮
                         │Program│
                         ╰───┬───╯
                           ╭─┴─╮
                           │Fun│
                           ╰─┬─╯
      ╭─────────┬────────────┴─────────╮
    ╭─┴─╮  ╭────┴──╮              ╭────┴──╮
    │ g │  │Formals│              │OpExp <│
    │int│  ╰────┬──╯              ╰────┬──╯
    ╰───╯   ╭───┴──╮        ╭──────────┴────╮
          ╭─┴─╮ ╭──┴─╮ ╭────┴───╮       ╭───┴───╮
          │ x │ │ y  │ │IntExp 6│       │OpExp +│
          │int│ │bool│ ╰────────╯       ╰───┬───╯
          ╰───╯ ╰────╯                 ╭────┴─────╮
                                  ╭────┴───╮ ╭────┴───╮
                                  │IntExp 7│ │IntExp 1│
                                  ╰────────╯ ╰────────╯ |}]

let%expect_test "conditional expression" =
  check "int f(int x) = if 2 < 3 then 10 else 20";
  [%expect{|
                              ╭───────╮
                              │Program│
                              ╰───┬───╯
                                ╭─┴─╮
                                │Fun│
                                ╰─┬─╯
      ╭───────┬───────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                    ╭──┴──╮
    │ f │ │Formals│                    │IfExp│
    │int│ ╰───┬───╯                    ╰──┬──╯
    ╰───╯   ╭─┴─╮             ╭───────────┴────┬───────────╮
            │ x │         ╭───┴───╮       ╭────┴────╮ ╭────┴────╮
            │int│         │OpExp <│       │IntExp 10│ │IntExp 20│
            ╰───╯         ╰───┬───╯       ╰─────────╯ ╰─────────╯
                         ╭────┴─────╮
                    ╭────┴───╮ ╭────┴───╮
                    │IntExp 2│ │IntExp 3│
                    ╰────────╯ ╰────────╯ |}];

  check "int f(int x) = if 2 < 3 then 10 else 20 + 30";
  [%expect{|
                                    ╭───────╮
                                    │Program│
                                    ╰───┬───╯
                                      ╭─┴─╮
                                      │Fun│
                                      ╰─┬─╯
      ╭───────┬─────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                          ╭──┴──╮
    │ f │ │Formals│                          │IfExp│
    │int│ ╰───┬───╯                          ╰──┬──╯
    ╰───╯   ╭─┴─╮             ╭────────────────┬┴────────────────╮
            │ x │         ╭───┴───╮       ╭────┴────╮        ╭───┴───╮
            │int│         │OpExp <│       │IntExp 10│        │OpExp +│
            ╰───╯         ╰───┬───╯       ╰─────────╯        ╰───┬───╯
                         ╭────┴─────╮                      ╭─────┴─────╮
                    ╭────┴───╮ ╭────┴───╮             ╭────┴────╮ ╭────┴────╮
                    │IntExp 2│ │IntExp 3│             │IntExp 20│ │IntExp 30│
                    ╰────────╯ ╰────────╯             ╰─────────╯ ╰─────────╯ |}];

  check "int f(int x) = if 2 < 3 then if 8 < 9 then 10 else 20 else if 12 < 0 then 40 else 50";
  [%expect{|
                                                                ╭───────╮
                                                                │Program│
                                                                ╰────┬──╯
                                                                  ╭──┴╮
                                                                  │Fun│
                                                                  ╰──┬╯
      ╭───────┬──────────────────────────────────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                                                      ╭───┴─╮
    │ f │ │Formals│                                                      │IfExp│
    │int│ ╰───┬───╯                                                      ╰───┬─╯
    ╰───╯   ╭─┴─╮             ╭─────────────────────────────────┬────────────┴─────────────────────────────────╮
            │ x │         ╭───┴───╮                          ╭──┴──╮                                       ╭───┴─╮
            │int│         │OpExp <│                          │IfExp│                                       │IfExp│
            ╰───╯         ╰───┬───╯                          ╰──┬──╯                                       ╰───┬─╯
                         ╭────┴─────╮               ╭───────────┴────┬───────────╮                 ╭───────────┴────┬───────────╮
                    ╭────┴───╮ ╭────┴───╮       ╭───┴───╮       ╭────┴────╮ ╭────┴────╮       ╭────┴──╮        ╭────┴────╮ ╭────┴────╮
                    │IntExp 2│ │IntExp 3│       │OpExp <│       │IntExp 10│ │IntExp 20│       │OpExp <│        │IntExp 40│ │IntExp 50│
                    ╰────────╯ ╰────────╯       ╰───┬───╯       ╰─────────╯ ╰─────────╯       ╰────┬──╯        ╰─────────╯ ╰─────────╯
                                               ╭────┴─────╮                                  ╭─────┴─────╮
                                          ╭────┴───╮ ╭────┴───╮                         ╭────┴────╮ ╭────┴───╮
                                          │IntExp 8│ │IntExp 9│                         │IntExp 12│ │IntExp 0│
                                          ╰────────╯ ╰────────╯                         ╰─────────╯ ╰────────╯ |}]

let%expect_test "let expression" =
  check "int f(int x) = let x = 2 + 3 in 2 + x < 10";
  [%expect{|
                                   ╭───────╮
                                   │Program│
                                   ╰───┬───╯
                                     ╭─┴─╮
                                     │Fun│
                                     ╰─┬─╯
      ╭───────┬────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                       ╭────┴───╮
    │ f │ │Formals│                       │LetExp x│
    │int│ ╰───┬───╯                       ╰────┬───╯
    ╰───╯   ╭─┴─╮             ╭────────────────┴──────────╮
            │ x │         ╭───┴───╮                   ╭───┴───╮
            │int│         │OpExp +│                   │OpExp <│
            ╰───╯         ╰───┬───╯                   ╰───┬───╯
                         ╭────┴─────╮               ╭─────┴──────────╮
                    ╭────┴───╮ ╭────┴───╮       ╭───┴───╮       ╭────┴────╮
                    │IntExp 2│ │IntExp 3│       │OpExp +│       │IntExp 10│
                    ╰────────╯ ╰────────╯       ╰───┬───╯       ╰─────────╯
                                               ╭────┴─────╮
                                          ╭────┴───╮ ╭────┴───╮
                                          │IntExp 2│ │VarExp x│
                                          ╰────────╯ ╰────────╯ |}];

  check "int f(int x) = let x = 2 + 3 in if x < 10 then 100 else 200";
  [%expect{|
                                          ╭───────╮
                                          │Program│
                                          ╰────┬──╯
                                            ╭──┴╮
                                            │Fun│
                                            ╰──┬╯
      ╭───────┬────────────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                               ╭────┴───╮
    │ f │ │Formals│                               │LetExp x│
    │int│ ╰───┬───╯                               ╰────┬───╯
    ╰───╯   ╭─┴─╮             ╭────────────────────────┴──────────╮
            │ x │         ╭───┴───╮                           ╭───┴─╮
            │int│         │OpExp +│                           │IfExp│
            ╰───╯         ╰───┬───╯                           ╰───┬─╯
                         ╭────┴─────╮                ╭────────────┴────┬────────────╮
                    ╭────┴───╮ ╭────┴───╮       ╭────┴──╮        ╭─────┴────╮ ╭─────┴────╮
                    │IntExp 2│ │IntExp 3│       │OpExp <│        │IntExp 100│ │IntExp 200│
                    ╰────────╯ ╰────────╯       ╰────┬──╯        ╰──────────╯ ╰──────────╯
                                               ╭─────┴────╮
                                          ╭────┴───╮ ╭────┴────╮
                                          │VarExp x│ │IntExp 10│
                                          ╰────────╯ ╰─────────╯ |}];

  check "int f(int x) = if 5 < 10 then 1 else let y = 5 in 8 < y";
  [%expect{|
                                        ╭───────╮
                                        │Program│
                                        ╰────┬──╯
                                          ╭──┴╮
                                          │Fun│
                                          ╰──┬╯
      ╭───────┬──────────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                              ╭───┴─╮
    │ f │ │Formals│                              │IfExp│
    │int│ ╰───┬───╯                              ╰───┬─╯
    ╰───╯   ╭─┴─╮              ╭────────────────┬────┴────────────────╮
            │ x │         ╭────┴──╮        ╭────┴───╮            ╭────┴───╮
            │int│         │OpExp <│        │IntExp 1│            │LetExp y│
            ╰───╯         ╰────┬──╯        ╰────────╯            ╰────┬───╯
                         ╭─────┴────╮                      ╭──────────┴────╮
                    ╭────┴───╮ ╭────┴────╮            ╭────┴───╮       ╭───┴───╮
                    │IntExp 5│ │IntExp 10│            │IntExp 5│       │OpExp <│
                    ╰────────╯ ╰─────────╯            ╰────────╯       ╰───┬───╯
                                                                      ╭────┴─────╮
                                                                 ╭────┴───╮ ╭────┴───╮
                                                                 │IntExp 8│ │VarExp y│
                                                                 ╰────────╯ ╰────────╯ |}];

  check "int f(int x) = if 5 < 10 then let y = 5 in 8 < y else 99";
  [%expect{|
                                         ╭───────╮
                                         │Program│
                                         ╰───┬───╯
                                           ╭─┴─╮
                                           │Fun│
                                           ╰─┬─╯
      ╭───────┬──────────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                               ╭──┴──╮
    │ f │ │Formals│                               │IfExp│
    │int│ ╰───┬───╯                               ╰──┬──╯
    ╰───╯   ╭─┴─╮              ╭─────────────────────┴─────┬─────────────────────╮
            │ x │         ╭────┴──╮                   ╭────┴───╮            ╭────┴────╮
            │int│         │OpExp <│                   │LetExp y│            │IntExp 99│
            ╰───╯         ╰────┬──╯                   ╰────┬───╯            ╰─────────╯
                         ╭─────┴────╮           ╭──────────┴────╮
                    ╭────┴───╮ ╭────┴────╮ ╭────┴───╮       ╭───┴───╮
                    │IntExp 5│ │IntExp 10│ │IntExp 5│       │OpExp <│
                    ╰────────╯ ╰─────────╯ ╰────────╯       ╰───┬───╯
                                                           ╭────┴─────╮
                                                      ╭────┴───╮ ╭────┴───╮
                                                      │IntExp 8│ │VarExp y│
                                                      ╰────────╯ ╰────────╯ |}]

let%expect_test "function call" =
  check "int f(int x) = not(x < 3)";
  [%expect{|
                  ╭───────╮
                  │Program│
                  ╰───┬───╯
                    ╭─┴─╮
                    │Fun│
                    ╰─┬─╯
      ╭───────┬───────┴───────╮
    ╭─┴─╮ ╭───┴───╮     ╭─────┴─────╮
    │ f │ │Formals│     │CallExp not│
    │int│ ╰───┬───╯     ╰─────┬─────╯
    ╰───╯   ╭─┴─╮         ╭───┴───╮
            │ x │         │OpExp <│
            │int│         ╰───┬───╯
            ╰───╯        ╭────┴─────╮
                    ╭────┴───╮ ╭────┴───╮
                    │VarExp x│ │IntExp 3│
                    ╰────────╯ ╰────────╯ |}];

  check "int f(int x) = g(x < 3, x+1, x+5) + 9";
  [%expect{|
                                             ╭───────╮
                                             │Program│
                                             ╰────┬──╯
                                               ╭──┴╮
                                               │Fun│
                                               ╰──┬╯
      ╭───────┬───────────────────────────────────┴───────╮
    ╭─┴─╮ ╭───┴───╮                                  ╭────┴──╮
    │ f │ │Formals│                                  │OpExp +│
    │int│ ╰───┬───╯                                  ╰────┬──╯
    ╰───╯   ╭─┴─╮                                   ╭─────┴────────────────────────────────╮
            │ x │                              ╭────┴────╮                            ╭────┴───╮
            │int│                              │CallExp g│                            │IntExp 9│
            ╰───╯                              ╰────┬────╯                            ╰────────╯
                              ╭─────────────────────┴─────────────────────╮
                          ╭───┴───╮             ╭───┴───╮             ╭───┴───╮
                          │OpExp <│             │OpExp +│             │OpExp +│
                          ╰───┬───╯             ╰───┬───╯             ╰───┬───╯
                         ╭────┴─────╮          ╭────┴─────╮          ╭────┴─────╮
                    ╭────┴───╮ ╭────┴───╮ ╭────┴───╮ ╭────┴───╮ ╭────┴───╮ ╭────┴───╮
                    │VarExp x│ │IntExp 3│ │VarExp x│ │IntExp 1│ │VarExp x│ │IntExp 5│
                    ╰────────╯ ╰────────╯ ╰────────╯ ╰────────╯ ╰────────╯ ╰────────╯ |}];

  check "int f(bool x) = g()";
  [%expect{| :1.19 error: syntax |}];

  check "int f(bool a, numero y) = 0";
  [%expect{| :1.20 error: syntax |}];

  check "bool f(int x y) = 0";
  [%expect{| :1.14 error: syntax |}]
